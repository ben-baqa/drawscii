use "std/types.jam";
use "std/function.jam";
use "vec2.jam";

let g = love.graphics;

prototype uiElement {
    constructor: (x: number = 0, y: number = 0,
        w: number = 100, h: number = 100, s: string = "thing") :=> {

        @origin = vec2(x, y);
        @size = vec2(w, h);
        @label = s;
        @focus = false;
        @text_scale = 0.8 * h / FONT_SIZE;
    };

    update: (mouse_pos: vec2) :=> {
        @focus = mouse_pos:exceeds @origin && mouse_pos:within (@origin + @size);
    };

    draw: () :=> {
        g.rectangle("line", @origin.x, @origin.y, @size.x, @size.y);
        @draw_label!;
    };
    
    draw_label: with {
        (offset: vec2) :=> {
            g.push!;
            g.translate((@origin + (@size / 2) + (vec2.up * FONT_SIZE / 8) + offset):split!);
            g.scale(@text_scale, @text_scale);
            g.printf(@label, 0, 0, @size.x * 2, "center", 0, 1, 1, @size.x, (@size.y / 2));
            g.pop!;
        };
        () :=> {
            g.push!;
            g.translate((@origin + (@size / 2) + (vec2.up * FONT_SIZE / 8)):split!);
            g.scale(@text_scale, @text_scale);
            g.printf(@label, 0, 0, @size.x * 2, "center", 0, 1, 1, @size.x, (@size.y / 2));
            g.pop!;
        };
    };
    
    on_click: () :=> nil;
    off_click: () :=> nil;
    __tostring: () :=> @label;
};
export uiElement;